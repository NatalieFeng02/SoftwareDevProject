{{> in_nav}}


<div class="container mt-5">
  <h2 class="text-center mb-4">Results for '{{searchQuery}}'</h2>
  <div class="table-responsive">
    <table class="table">
      <thead>
        <tr>
          <th scope="col" class="album-cover-header"></th> <!-- Empty header for album cover -->
          <th scope="col">Title</th>
          <th scope="col">Artist</th>
          <th scope="col">Album</th>
          <th scope="actions">Saved</th>
        </tr>
      </thead>
      <tbody>
        {{#each searchResults}}
        <tr class="clickable-row" data-title="{{title}}" data-artist="{{artist}}" data-album="{{album}}" data-album-cover="{{this.albumCover}}">
          <td class="album-cover-cell">
            <img src="{{this.albumCover}}" alt="{{this.title}}" class="album-cover">
          </td>
          <td><div class="result-button" data-type="title">{{this.title}}</div></td>
          <td><div class="result-button" data-type="artist">{{this.artist}}</div></td>
          <td><div class="result-button" data-type="album">{{this.album}}</div></td>
          <td>
            {{#if this.hasDefAnalysis}}
            <a href="/saved-analysis?title={{encodeURIComponent title}}&artist={{encodeURIComponent artist}}&album={{encodeURIComponent album}}&userID={{../userID}}" class="btn btn-primary">Analysis</a>
            {{/if}}
            {{#if this.hasHistAnalysis}}
            <a href="/saved-background?title={{encodeURIComponent this.title}}&artist={{encodeURIComponent this.artist}}&album={{encodeURIComponent this.album}}&userID={{../userID}}" class="btn btn-secondary">Background</a>
            {{/if}}
          </td>
        </tr>
        {{/each}}
      </tbody>
    </table>
  </div>
  
  <nav aria-label="Search results pages" class="mt-4">
    <ul class="pagination justify-content-center" id="pages">
      {{#each pages}}
      
        <li class="page-item{{#if this.isCurrent}} active{{/if}}">
          <a class="page-link" href="?searchQuery={{../searchQuery}}&page={{this.number}}">{{this.number}}</a>
        </li>
      {{/each}}


      {{!-- THIS LOGIC BELOW IS NOT CORRECT, WE NEED MUCH MORE COMPLICATED LOGIC TO ADD ELIPSES --}}
      
      
      {{!-- {{#unless lastPageIsCurrent}}
        <li class="page-item"><span class="page-link">...</span></li>
        <li class="page-item">
          <a class="page-link" href="?searchQuery={{searchQuery}}&page={{totalPages}}">{{totalPages}}</a>
        </li>
      {{/unless}} --}}
      
    </ul>
  </nav>
</div>

{{> footer}}

<!-- Additional CSS for the album cover images -->
<style>

  #pages {
    font-family: sans-serif;
  }


  .album-cover {
    width: 50px; /* Adjust size as needed */
    height: auto;
    margin-right: 10px;
  }
  .album-cover-header {
    width: 1%; /* Minimize the width of the album cover header */
    white-space: nowrap; /* Ensure the header does not expand */
  }
  .album-cover-cell {
    padding-left: 10px; /* Add some padding to the left of the album cover image */
  }

  .table td {
    vertical-align: middle;
  }

   .clickable {
    cursor: pointer; /* Changes cursor to indicate the item is clickable */
  }
  .result-button {
    background: none;
    border: none;
    text-align: left;
    padding: 0;
    margin: 0;
    color: inherit;
    font: inherit;
    cursor: pointer;
    display: block;
    width: 100%;
  }
  .result-button:hover {
    background-color: #f8f9fa; /* Light color on hover, adjust as needed */
  }
  /* You might want to add :focus styles if you want to keep the button-like interaction */
  .result-button:focus {
    outline: none; /* Removes the default focus outline */
    /* You can add custom focus styles if needed */
  }
</style>

<script>
  console.log("Javascript is working here");
  document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.clickable-row').forEach(row => {
      row.addEventListener('click', function() {
        // Call handleRowClick directly with the current row context
        handleRowClick(this);
      });
    });
  });

function handleRowClick(row) {
    // Extract information
    const title = encodeURIComponent(row.getAttribute('data-title'));
    const artist = encodeURIComponent(row.getAttribute('data-artist'));
    const album = encodeURIComponent(row.getAttribute('data-album'));
    const albumCoverElement = row.querySelector('.album-cover');
    const albumCover = albumCoverElement ? encodeURIComponent(albumCoverElement.src) : '';
    
    // Construct and navigate to the loading URL for /analysis
    const loadingUrlAnalysis = `/loading?redirectUrl=${encodeURIComponent(`/analysis?title=${title}&artist=${artist}&album=${album}&albumCover=${albumCover}`)}`;
    window.location.href = loadingUrlAnalysis;
}

</script>


